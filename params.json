{"google":"","note":"Don't delete this file! It's used internally to help with page regeneration.","body":"# Tap for Tap Unity Plugin (Coming Soon!)\r\n\r\nWant to use Tap for Tap with Unity? We got you covered on Android and iOS.\r\n\r\n## Preamble\r\nThis Unity plugin was built and tested against Unity 3.5.\r\n\r\n### Minimum Requirements\r\n\r\n#### Android\r\n- None\r\n\r\n#### iPhone\r\n- An OS X machine running Lion (10.7)\r\n- iOS 6.0 SDK\r\n\r\n## Integration\r\nIf you don't have the plugin yet then head over to the [no link](need url).\r\n\r\nInstalling the Tap for Tap Unity Plugin is easy. This isn't a Unity tutorial so we \r\nassume that you have a Unity project already set up and working. The first thing you\r\nneed to do is import the TapForTap.unitypackage into your app. Then follow the steps \r\nbelow for configuring iOS and Android.\r\n\r\n### Configuring Tap for Tap for iOS\r\nWhen Xcode loads you will need to add the AdSupport framework to your build target.\r\nIn the project explorer on the left side of Xcode 4:\r\n\r\n- Select your project from the very top.\r\n- Select your app's target.\r\n- Select the Build Phases tab.\r\n- Expand Link Binaries With Libraries.\r\n- Click the + button.\r\n- Select the AdSupport.framework\r\n- Click add\r\n\r\n### Configuring Tap for Tap for Android\r\nA few additions need to be made to Unity's AndroidManifest.xml. If you do not\r\nhave a custom manifest Unity recommends to create your own under the `Assets/Plugins/Android `folder ([Unity docs](http://docs.unity3d.com/Documentation/Manual/PluginsForAndroid.html)).\r\nOr you can edit the default manifest at\r\n`/Applications/Unity/Unity.app/Contents/PlaybackEngines/AndroidPlayer` for Mac OSX\r\n and `C:\\Program Files\\Unity\\Editor\\Data\\PlaybackEngines\\AndroidPlayer\\AndroidManifest.xml` for Windows.\r\n \r\n1. Add the following permissions to the AndroidManifest.xml\r\n  `<uses-permission android:name=\"android.permission.INTERNET\" />`\r\n  `<uses-permission android:name=\"android.permission.READ_PHONE_STATE\" />`\r\n  `<uses-permission android:name=\"android.permission.ACCESS_NETWORK_STATE\" />`\r\n  `<uses-permission android:name=\"android.permission.ACCESS_WIFI_STATE\" />`\r\n  `<uses-permission android:name=\"android.permission.WRITE_EXTERNAL_STORAGE\" />`\r\n2. Include the TapForTap activity in the AndroidManifest.xml  \r\n  `<activity android:name=\"com.tapfortap.TapForTapActivity\"/>`\r\n\r\nCongratulations, you are done. You should now be able to call into the Tap for Tap library\r\nand begin displaying ads.\r\n\r\n## API Documentation\r\nThe C# API lets you create, place, and remove Tap for Tap ad views,\r\nshow interstitals and app walls, and set various optional information about your users\r\nto help with targetting. Please make sure your privacy policy allows this\r\nbefore providing any personal information. All the API calls are static methods\r\nfound in the TapForTap class.\r\n\r\n### Tap for Tap API\r\n\r\n#### public static void initialize(string apiKey)\r\nThis initializes Tap for Tap must be called once at the start of the app before \r\nany other TapForTap calls can be made. It requires a Tap for Tap account API key\r\nwhich can be found by logging into Tap for Tap and clicking the account button.\r\n\r\nUsage:\r\n\r\n```cs\r\n  // Initialize Tap for Tap with my API key\r\n  TapForTap.initialize(\"MY API KEY\");\r\n```\r\n\r\n#### public static void CreateAdView(TapForTapVerticalAlignment vertical, TapForTapHorizontalAlignment horizontal)\r\nCreate a banner ad view of width 320dp and height 50dp at the desired screen location. \r\n- **[TapForTapVerticalAlignment](#TapForTapVerticalAlignment)** is an enum that has the following values : TOP, CENTER, BOTTOM. \r\n- **[TapForTapHorizontalAlignment](TapForTapHorizontalAlignment)** is an enum that has the following values : LEFT, CENTER, RIGHT.\r\n\r\nBy combining a vertical and horizontal alignment you can place an advertisement in \r\none of 9 places. A `*` denotes a location where an ad can be placed on the screen.\r\n<pre>\r\n-----------  \r\n|*   *   *|   \r\n|         |   \r\n|*   *   *|   \r\n|         |   \r\n|*   *   *|   \r\n-----------   \r\n</pre>\r\n\r\nUsage:\r\n\r\n```cs\r\n  // Create an AdView at the bottom center of the screen\r\n  TapForTap.CreateAdView(TapForTapVerticalAlignment.BOTTOM, TapForTapHorizontalAlignment.CENTER)\r\n```\r\n\r\n#### public static void RemoveAdView()\r\nRemove any AdView that is currently being displayed.\r\n\r\nUsage:\r\n\r\n```cs\r\n  // Remove the currently displayed AdView\r\n  TapForTap.RemoveAdView();\r\n```\r\n\r\n#### public static void PrepareInterstitial()\r\nPrepare an interstital ad by prefetching the ad. This method only needs to be called once.\r\nAfter the interstitial is shown we automatically prepare another one.\r\n\r\nUsage:\r\n\r\n```cs\r\n  // Prepare an interstitial\r\n  TapForTap.PrepareInterstitial();\r\n```\r\n\r\n#### public static void ShowInterstitial()\r\nShows an interstitial ad.\r\n\r\nUsage:\r\n\r\n```cs\r\n  // Show an insterstitial\r\n  TapForTap.ShowInterstitial();\r\n```\r\n\r\n#### public static void PrepareAppWall()\r\nPrepare an app wall ad by prefetching the ad. This method only needs to be called once.\r\nAfter the app wall is shown we automatically prepare another one.\r\n\r\nUsage:\r\n\r\n```cs\r\n  // Prepare an app wall\r\n  TapForTap.PrepareAppWall();\r\n```\r\n\r\n#### public static void ShowAppWall()\r\nShow an app wall ad.\r\n\r\nUsage:\r\n\r\n```cs\r\n  // Show an app wal\r\n  TapForTap.ShowAppWall();\r\n```\r\n\r\n#### public static void SetYearOfBirth(int yearOfBirth)\r\nSets the user's year of birth. This is sent along with \r\nad requests and helps with matching.\r\n\r\nUsage:\r\n\r\n```cs\r\n  // Set the birth year to 1990\r\n  TapForTap.SetYearOfBirth(1990);\r\n```\r\n\r\n#### public static void SetGender(TapForTapGender gender)\r\nSets the gender of the user. This is sent along with \r\nad requests and helps with matching.\r\n- [TapForTapGender](#TapForTapGender) is an enume that has the following values: MALE, FEMALE, NONE.\r\n\r\nUsage:\r\n\r\n```cs\r\n  // Set the Gender to male\r\n  TapForTap.SetGender(TapForTapGender.MALE);\r\n```\r\n\r\n#### public static void SetLocation(double latitude, double longitude)\r\nSets the user's location This is sent along with ad requests.\r\n\r\n- **latitide** The latitude of the user\r\n- **longitude** The longitude of the user\r\n\r\nUsage:\r\n\r\n```cs\r\n  // Set the location (Around Brentwood Bay Vancouver Island)\r\n  TapForTap.SetLocation(48.571155273059546, -123.45268249511719);\r\n```\r\n\r\n#### public static void SetUserAccountId(string userAccountId)\r\nSets a custom account id that you can use for your app. This is sent along with \r\nad requests and helps with matching.\r\n\r\nUsage:\r\n\r\n```cs\r\n  TapForTap.SetUserAccountId(\"My custom user account ID that I use\");\r\n```\r\n\r\n#### public static void setAdViewListener(ITapForTapAdView listener)\r\nSets the listener that will receive the AdView callbacks. See [IAdViewListener](#IAdViewListener)\r\nfor more details and available callback methods.\r\n\r\nUsage:\r\n\r\n```cs\r\n  // MyAdViewListener.cs\r\n  public class MyAdViewListener : ITapForTapAdView\r\n  {\r\n    public void OnTapAd()\r\n\t  {\r\n\t\t  Debug.Log(\"Called my OnTapAd);\r\n\t  }\r\n    \r\n\t  public void OnReceiveAd()\r\n\t  {\r\n\t\t  Debug.Log(\"Called my OnReceiveAd\");\r\n\t  }\r\n    \r\n\t  public void OnFailToReceiveAd(string reason)\r\n\t  {\r\n\t\t  Debug.Log(\"Called my OnFailToReceiveAd because of \" + reason);\r\n\t  }\r\n  }\r\n\r\n  // MyTapForTap.cs\r\n  MyAdViewListener myAdViewListener = new MyAdViewListener();\r\n  TapForTap.setAdViewListener(MyAdViewListener);\r\n```\r\n\r\n#### public static void setAppWallListener(ITapForTapAppWall listener)\r\nSets the listener that will receive the AppWall callbacks. See [IAppWallListener](#IAppWallListener)\r\nfor more details and available callback methods.\r\n\r\nUsage:\r\n\r\n```cs\r\n  // MyAppWallListener.cs\r\n  public class MyAppWallListener : ITapForTapAppWall\r\n  {\r\n    public void onDismiss()\r\n    {\r\n      Debug.Log(\"Called my app wall listener OnDismiss\");\r\n    }\r\n  }\r\n\r\n  // MyTapForTap.cs\r\n  MyAppWallListener myAppWallListener = new MyAppWallListener();\r\n  TapForTap.setAppWallListener(myAppWallListener);\r\n```\r\n\r\n#### public static void setInterstitiallListener(ITapForTapInterstitial listener) \r\nSets the listener that will receive the Interstitial callbacks. See [IInterstitialListener](#IInterstitialListener)\r\nfor more details and available callback methods.\r\n\r\nUsage:\r\n\r\n```cs\r\n  // MyInterstitialListener.cs\r\n  public class MyInterstitialListener : ITapForTapInterstitial\r\n  {\r\n    public void onDismiss()\r\n    {\r\n      Debug.Log(\"Called my interstitial listener OnDismiss\");\r\n    }\r\n  }\r\n\r\n  // MyTapForTap.cs\r\n  MyInterstitialListener myInterstitialListener = new MyInterstitialListener();\r\n  TapForTap.setInterstitiallListener(myInterstitialListener);\r\n```\r\n\r\n### <a name=\"IAdViewListener\"/>IAdViewListener\r\nAn interface used to receive callbacks when the status of an AdView has changed.\r\n- **void OnTapAd(void)**\r\n  - called when a user taps on an add\r\n- **void OnReceiveAd(void)**\r\n  - called when a ad is received\r\n- **OnFailedToReceiveAd(string reason)**\r\n - called when a request to get an add with a reason\r\n\r\n### <a name=\"IAppWallListener\"/>IAppWallListener\r\nAn interface used to receive callbacks when the status of an app wall has changed.\r\n\r\n- **void OnDismiss(void)**\r\n  - Called when the app wall is dismissed\r\n\r\n### <a name=\"IInterstitialListener\"/>IInterstitialListener\r\nAn interface used to receive callbacks when the status of an interstitial has changed.\r\n\r\n- **void OnDismiss(void)**\r\n  - Called when the interstitial is dismissed\r\n\r\n### <a name=\"TapForTapGender\"/>TapForTapGender\r\nAn enum used for setting the user's gender. Available value:\r\n- MALE\r\n- FEMALE\r\n- NONE\r\n\r\n### <a name=\"TapForTapHorizontalAlignment\"/>TapForTapHorizontalAlignment\r\nAn enum used for determining the horizontal placement of an ad view. Available value:\r\n- LEFT\r\n- CENTER\r\n- RIGHT\r\n\r\n### <a name=\"TapForTapVerticalAlignment\"/>TapForTapVerticalAlignment\r\nAn enum used for determining the vertical placement of an ad view. Available value:\r\n- TOP\r\n- CENTER\r\n- BOTTOM\r\n\r\n======\r\n\r\n## [Back To Documentaion](http://tapfortap.github.com/Documentation/) ##\r\n\r\n### *Support* ###\r\nThings don't always go according to plan. If you hit a snag somewhere and need a hand don't hesitate to get in touch with us at [support@tapfortap.com](mailto:support@tapfortap.com) or on Zendesk [here](https://tapfortap.zendesk.com/anonymous_requests/new).\r\n\r\n### *License* ###\r\nLicensed under the terms of the MIT License.\r\n\r\nCopyright &copy; 2012 Tap for Tap Promotions Inc.\r\n","name":"Unity","tagline":"The Tap for Tap Unity Plugin"}